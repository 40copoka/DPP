#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MilSpace.DataAccess.Definition
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DNOEGDB")]
	public partial class MilSpaceVisibilityContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMilSp_Visible_ResultIOP(MilSp_Visible_ResultIOP instance);
    partial void UpdateMilSp_Visible_ResultIOP(MilSp_Visible_ResultIOP instance);
    partial void DeleteMilSp_Visible_ResultIOP(MilSp_Visible_ResultIOP instance);
    partial void InsertMilSp_Visible_InstantObservationPoint(MilSp_Visible_InstantObservationPoint instance);
    partial void UpdateMilSp_Visible_InstantObservationPoint(MilSp_Visible_InstantObservationPoint instance);
    partial void DeleteMilSp_Visible_InstantObservationPoint(MilSp_Visible_InstantObservationPoint instance);
    partial void InsertMilSp_Visible_ResultOO(MilSp_Visible_ResultOO instance);
    partial void UpdateMilSp_Visible_ResultOO(MilSp_Visible_ResultOO instance);
    partial void DeleteMilSp_Visible_ResultOO(MilSp_Visible_ResultOO instance);
    partial void InsertMilSp_Visible_ResultQuality(MilSp_Visible_ResultQuality instance);
    partial void UpdateMilSp_Visible_ResultQuality(MilSp_Visible_ResultQuality instance);
    partial void DeleteMilSp_Visible_ResultQuality(MilSp_Visible_ResultQuality instance);
    partial void InsertMilSp_Visible_ResultIOP1(MilSp_Visible_ResultIOP1 instance);
    partial void UpdateMilSp_Visible_ResultIOP1(MilSp_Visible_ResultIOP1 instance);
    partial void DeleteMilSp_Visible_ResultIOP1(MilSp_Visible_ResultIOP1 instance);
    partial void InsertMilSp_VisibilitySession(MilSp_VisibilitySession instance);
    partial void UpdateMilSp_VisibilitySession(MilSp_VisibilitySession instance);
    partial void DeleteMilSp_VisibilitySession(MilSp_VisibilitySession instance);
    partial void InsertVisiblilityObservPoint(VisiblilityObservPoint instance);
    partial void UpdateVisiblilityObservPoint(VisiblilityObservPoint instance);
    partial void DeleteVisiblilityObservPoint(VisiblilityObservPoint instance);
    partial void InsertVisiblilityObservationObjects(VisiblilityObservationObjects instance);
    partial void UpdateVisiblilityObservationObjects(VisiblilityObservationObjects instance);
    partial void DeleteVisiblilityObservationObjects(VisiblilityObservationObjects instance);
    partial void InsertMilSp_VisiblityResults(MilSp_VisiblityResults instance);
    partial void UpdateMilSp_VisiblityResults(MilSp_VisiblityResults instance);
    partial void DeleteMilSp_VisiblityResults(MilSp_VisiblityResults instance);
    #endregion
		
		public MilSpaceVisibilityContext() : 
				base(global::MilSpace.DataAccess.Properties.Settings.Default.DNOEGDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MilSpaceVisibilityContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MilSpaceVisibilityContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MilSpaceVisibilityContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MilSpaceVisibilityContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MilSp_Visible_ResultIOP> MilSp_Visible_ResultIOPs
		{
			get
			{
				return this.GetTable<MilSp_Visible_ResultIOP>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_Visible_InstantObservationPoint> MilSp_Visible_InstantObservationPoints
		{
			get
			{
				return this.GetTable<MilSp_Visible_InstantObservationPoint>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_Visible_ResultsCover> MilSp_Visible_ResultsCovers
		{
			get
			{
				return this.GetTable<MilSp_Visible_ResultsCover>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_CL_TypeOP> MilSp_CL_TypeOPs
		{
			get
			{
				return this.GetTable<MilSp_CL_TypeOP>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_Visible_ResultOO> MilSp_Visible_ResultOOs
		{
			get
			{
				return this.GetTable<MilSp_Visible_ResultOO>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_Visible_ResultQuality> MilSp_Visible_ResultQualities
		{
			get
			{
				return this.GetTable<MilSp_Visible_ResultQuality>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_Visible_ResultIOP1> MilSp_Visible_ResultIOP1s
		{
			get
			{
				return this.GetTable<MilSp_Visible_ResultIOP1>();
			}
		}
		
		internal System.Data.Linq.Table<MilSp_VisibilitySession> MilSp_VisibilitySessions
		{
			get
			{
				return this.GetTable<MilSp_VisibilitySession>();
			}
		}
		
		internal System.Data.Linq.Table<VisiblilityObservPoint> VisiblilityObservPoints
		{
			get
			{
				return this.GetTable<VisiblilityObservPoint>();
			}
		}
		
		internal System.Data.Linq.Table<VisiblilityObservationObjects> VisiblilityObservationObjects
		{
			get
			{
				return this.GetTable<VisiblilityObservationObjects>();
			}
		}
		
		public System.Data.Linq.Table<MilSp_VisiblityResults> MilSp_VisiblityResults
		{
			get
			{
				return this.GetTable<MilSp_VisiblityResults>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_Visible_ResultIOP")]
	public partial class MilSp_Visible_ResultIOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _objectid;
		
		private string _idOPRes;
		
		private string _idOP;
		
		private string _idIOP;
		
		private string _idRes;
		
		private System.Nullable<System.DateTime> _DT;
		
		private System.Nullable<double> _XWGS;
		
		private System.Nullable<double> _YWGS;
		
		private System.Nullable<double> _HAbs;
		
		private System.Nullable<double> _Az1;
		
		private System.Nullable<double> _Az2;
		
		private System.Nullable<double> _Angl1;
		
		private System.Nullable<double> _Angl2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnobjectidChanging(int value);
    partial void OnobjectidChanged();
    partial void OnidOPResChanging(string value);
    partial void OnidOPResChanged();
    partial void OnidOPChanging(string value);
    partial void OnidOPChanged();
    partial void OnidIOPChanging(string value);
    partial void OnidIOPChanged();
    partial void OnidResChanging(string value);
    partial void OnidResChanged();
    partial void OnDTChanging(System.Nullable<System.DateTime> value);
    partial void OnDTChanged();
    partial void OnXWGSChanging(System.Nullable<double> value);
    partial void OnXWGSChanged();
    partial void OnYWGSChanging(System.Nullable<double> value);
    partial void OnYWGSChanged();
    partial void OnHAbsChanging(System.Nullable<double> value);
    partial void OnHAbsChanged();
    partial void OnAz1Changing(System.Nullable<double> value);
    partial void OnAz1Changed();
    partial void OnAz2Changing(System.Nullable<double> value);
    partial void OnAz2Changed();
    partial void OnAngl1Changing(System.Nullable<double> value);
    partial void OnAngl1Changed();
    partial void OnAngl2Changing(System.Nullable<double> value);
    partial void OnAngl2Changed();
    #endregion
		
		public MilSp_Visible_ResultIOP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this.OnobjectidChanging(value);
					this.SendPropertyChanging();
					this._objectid = value;
					this.SendPropertyChanged("objectid");
					this.OnobjectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOPRes", DbType="NVarChar(50)")]
		public string idOPRes
		{
			get
			{
				return this._idOPRes;
			}
			set
			{
				if ((this._idOPRes != value))
				{
					this.OnidOPResChanging(value);
					this.SendPropertyChanging();
					this._idOPRes = value;
					this.SendPropertyChanged("idOPRes");
					this.OnidOPResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOP", DbType="NVarChar(50)")]
		public string idOP
		{
			get
			{
				return this._idOP;
			}
			set
			{
				if ((this._idOP != value))
				{
					this.OnidOPChanging(value);
					this.SendPropertyChanging();
					this._idOP = value;
					this.SendPropertyChanged("idOP");
					this.OnidOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIOP", DbType="NVarChar(50)")]
		public string idIOP
		{
			get
			{
				return this._idIOP;
			}
			set
			{
				if ((this._idIOP != value))
				{
					this.OnidIOPChanging(value);
					this.SendPropertyChanging();
					this._idIOP = value;
					this.SendPropertyChanged("idIOP");
					this.OnidIOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRes", DbType="NVarChar(50)")]
		public string idRes
		{
			get
			{
				return this._idRes;
			}
			set
			{
				if ((this._idRes != value))
				{
					this.OnidResChanging(value);
					this.SendPropertyChanging();
					this._idRes = value;
					this.SendPropertyChanged("idRes");
					this.OnidResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XWGS", DbType="Float")]
		public System.Nullable<double> XWGS
		{
			get
			{
				return this._XWGS;
			}
			set
			{
				if ((this._XWGS != value))
				{
					this.OnXWGSChanging(value);
					this.SendPropertyChanging();
					this._XWGS = value;
					this.SendPropertyChanged("XWGS");
					this.OnXWGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YWGS", DbType="Float")]
		public System.Nullable<double> YWGS
		{
			get
			{
				return this._YWGS;
			}
			set
			{
				if ((this._YWGS != value))
				{
					this.OnYWGSChanging(value);
					this.SendPropertyChanging();
					this._YWGS = value;
					this.SendPropertyChanged("YWGS");
					this.OnYWGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAbs", DbType="Float")]
		public System.Nullable<double> HAbs
		{
			get
			{
				return this._HAbs;
			}
			set
			{
				if ((this._HAbs != value))
				{
					this.OnHAbsChanging(value);
					this.SendPropertyChanging();
					this._HAbs = value;
					this.SendPropertyChanged("HAbs");
					this.OnHAbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Az1", DbType="Float")]
		public System.Nullable<double> Az1
		{
			get
			{
				return this._Az1;
			}
			set
			{
				if ((this._Az1 != value))
				{
					this.OnAz1Changing(value);
					this.SendPropertyChanging();
					this._Az1 = value;
					this.SendPropertyChanged("Az1");
					this.OnAz1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Az2", DbType="Float")]
		public System.Nullable<double> Az2
		{
			get
			{
				return this._Az2;
			}
			set
			{
				if ((this._Az2 != value))
				{
					this.OnAz2Changing(value);
					this.SendPropertyChanging();
					this._Az2 = value;
					this.SendPropertyChanged("Az2");
					this.OnAz2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Angl1", DbType="Float")]
		public System.Nullable<double> Angl1
		{
			get
			{
				return this._Angl1;
			}
			set
			{
				if ((this._Angl1 != value))
				{
					this.OnAngl1Changing(value);
					this.SendPropertyChanging();
					this._Angl1 = value;
					this.SendPropertyChanged("Angl1");
					this.OnAngl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Angl2", DbType="Float")]
		public System.Nullable<double> Angl2
		{
			get
			{
				return this._Angl2;
			}
			set
			{
				if ((this._Angl2 != value))
				{
					this.OnAngl2Changing(value);
					this.SendPropertyChanging();
					this._Angl2 = value;
					this.SendPropertyChanged("Angl2");
					this.OnAngl2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_Visible_InstantObservationPoint")]
	public partial class MilSp_Visible_InstantObservationPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _objectid;
		
		private string _idIOP;
		
		private string _IDOP;
		
		private System.Nullable<double> _HAbs;
		
		private System.Nullable<double> _XWGS;
		
		private System.Nullable<double> _YWGS;
		
		private System.Nullable<double> _Az1;
		
		private System.Nullable<double> _Az2;
		
		private System.Nullable<double> _Angl1;
		
		private System.Nullable<double> _Angl2;
		
		private System.Nullable<double> _Distance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnobjectidChanging(int value);
    partial void OnobjectidChanged();
    partial void OnidIOPChanging(string value);
    partial void OnidIOPChanged();
    partial void OnIDOPChanging(string value);
    partial void OnIDOPChanged();
    partial void OnHAbsChanging(System.Nullable<double> value);
    partial void OnHAbsChanged();
    partial void OnXWGSChanging(System.Nullable<double> value);
    partial void OnXWGSChanged();
    partial void OnYWGSChanging(System.Nullable<double> value);
    partial void OnYWGSChanged();
    partial void OnAz1Changing(System.Nullable<double> value);
    partial void OnAz1Changed();
    partial void OnAz2Changing(System.Nullable<double> value);
    partial void OnAz2Changed();
    partial void OnAngl1Changing(System.Nullable<double> value);
    partial void OnAngl1Changed();
    partial void OnAngl2Changing(System.Nullable<double> value);
    partial void OnAngl2Changed();
    partial void OnDistanceChanging(System.Nullable<double> value);
    partial void OnDistanceChanged();
    #endregion
		
		public MilSp_Visible_InstantObservationPoint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this.OnobjectidChanging(value);
					this.SendPropertyChanging();
					this._objectid = value;
					this.SendPropertyChanged("objectid");
					this.OnobjectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIOP", DbType="NVarChar(50)")]
		public string idIOP
		{
			get
			{
				return this._idIOP;
			}
			set
			{
				if ((this._idIOP != value))
				{
					this.OnidIOPChanging(value);
					this.SendPropertyChanging();
					this._idIOP = value;
					this.SendPropertyChanged("idIOP");
					this.OnidIOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOP", DbType="NChar(50)")]
		public string IDOP
		{
			get
			{
				return this._IDOP;
			}
			set
			{
				if ((this._IDOP != value))
				{
					this.OnIDOPChanging(value);
					this.SendPropertyChanging();
					this._IDOP = value;
					this.SendPropertyChanged("IDOP");
					this.OnIDOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAbs", DbType="Float")]
		public System.Nullable<double> HAbs
		{
			get
			{
				return this._HAbs;
			}
			set
			{
				if ((this._HAbs != value))
				{
					this.OnHAbsChanging(value);
					this.SendPropertyChanging();
					this._HAbs = value;
					this.SendPropertyChanged("HAbs");
					this.OnHAbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XWGS", DbType="Float")]
		public System.Nullable<double> XWGS
		{
			get
			{
				return this._XWGS;
			}
			set
			{
				if ((this._XWGS != value))
				{
					this.OnXWGSChanging(value);
					this.SendPropertyChanging();
					this._XWGS = value;
					this.SendPropertyChanged("XWGS");
					this.OnXWGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YWGS", DbType="Float")]
		public System.Nullable<double> YWGS
		{
			get
			{
				return this._YWGS;
			}
			set
			{
				if ((this._YWGS != value))
				{
					this.OnYWGSChanging(value);
					this.SendPropertyChanging();
					this._YWGS = value;
					this.SendPropertyChanged("YWGS");
					this.OnYWGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Az1", DbType="Float")]
		public System.Nullable<double> Az1
		{
			get
			{
				return this._Az1;
			}
			set
			{
				if ((this._Az1 != value))
				{
					this.OnAz1Changing(value);
					this.SendPropertyChanging();
					this._Az1 = value;
					this.SendPropertyChanged("Az1");
					this.OnAz1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Az2", DbType="Float")]
		public System.Nullable<double> Az2
		{
			get
			{
				return this._Az2;
			}
			set
			{
				if ((this._Az2 != value))
				{
					this.OnAz2Changing(value);
					this.SendPropertyChanging();
					this._Az2 = value;
					this.SendPropertyChanged("Az2");
					this.OnAz2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Angl1", DbType="Float")]
		public System.Nullable<double> Angl1
		{
			get
			{
				return this._Angl1;
			}
			set
			{
				if ((this._Angl1 != value))
				{
					this.OnAngl1Changing(value);
					this.SendPropertyChanging();
					this._Angl1 = value;
					this.SendPropertyChanged("Angl1");
					this.OnAngl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Angl2", DbType="Float")]
		public System.Nullable<double> Angl2
		{
			get
			{
				return this._Angl2;
			}
			set
			{
				if ((this._Angl2 != value))
				{
					this.OnAngl2Changing(value);
					this.SendPropertyChanging();
					this._Angl2 = value;
					this.SendPropertyChanged("Angl2");
					this.OnAngl2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Float")]
		public System.Nullable<double> Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_Visible_ResultsCover")]
	public partial class MilSp_Visible_ResultsCover
	{
		
		private int _objectid;
		
		private string _idCover;
		
		private string _IDRes;
		
		private string _LnkToCover;
		
		private System.Nullable<int> _ColorCover;
		
		private System.Nullable<int> _NoDataCover;
		
		public MilSp_Visible_ResultsCover()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this._objectid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCover", DbType="NVarChar(50)")]
		public string idCover
		{
			get
			{
				return this._idCover;
			}
			set
			{
				if ((this._idCover != value))
				{
					this._idCover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRes", DbType="NVarChar(50)")]
		public string IDRes
		{
			get
			{
				return this._IDRes;
			}
			set
			{
				if ((this._IDRes != value))
				{
					this._IDRes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LnkToCover", DbType="NVarChar(255)")]
		public string LnkToCover
		{
			get
			{
				return this._LnkToCover;
			}
			set
			{
				if ((this._LnkToCover != value))
				{
					this._LnkToCover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorCover", DbType="Int")]
		public System.Nullable<int> ColorCover
		{
			get
			{
				return this._ColorCover;
			}
			set
			{
				if ((this._ColorCover != value))
				{
					this._ColorCover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDataCover", DbType="Int")]
		public System.Nullable<int> NoDataCover
		{
			get
			{
				return this._NoDataCover;
			}
			set
			{
				if ((this._NoDataCover != value))
				{
					this._NoDataCover = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_CL_TypeOP")]
	public partial class MilSp_CL_TypeOP
	{
		
		private System.Nullable<int> _objectid;
		
		private string _TypeOP;
		
		private string _sTitle;
		
		public MilSp_CL_TypeOP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", DbType="Int")]
		public System.Nullable<int> objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this._objectid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOP", DbType="NVarChar(10)")]
		public string TypeOP
		{
			get
			{
				return this._TypeOP;
			}
			set
			{
				if ((this._TypeOP != value))
				{
					this._TypeOP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(50)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this._sTitle = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_Visible_ResultOO")]
	public partial class MilSp_Visible_ResultOO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _objectid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnobjectidChanging(int value);
    partial void OnobjectidChanged();
    #endregion
		
		public MilSp_Visible_ResultOO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this.OnobjectidChanging(value);
					this.SendPropertyChanging();
					this._objectid = value;
					this.SendPropertyChanged("objectid");
					this.OnobjectidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_Visible_ResultQuality")]
	public partial class MilSp_Visible_ResultQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _objectid;
		
		private string _idResQual;
		
		private string _idRes;
		
		private string _IDOORes;
		
		private string _IDOPRes;
		
		private string _TypeQual;
		
		private System.Nullable<double> _EvalQual;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnobjectidChanging(int value);
    partial void OnobjectidChanged();
    partial void OnidResQualChanging(string value);
    partial void OnidResQualChanged();
    partial void OnidResChanging(string value);
    partial void OnidResChanged();
    partial void OnIDOOResChanging(string value);
    partial void OnIDOOResChanged();
    partial void OnIDOPResChanging(string value);
    partial void OnIDOPResChanged();
    partial void OnTypeQualChanging(string value);
    partial void OnTypeQualChanged();
    partial void OnEvalQualChanging(System.Nullable<double> value);
    partial void OnEvalQualChanged();
    #endregion
		
		public MilSp_Visible_ResultQuality()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this.OnobjectidChanging(value);
					this.SendPropertyChanging();
					this._objectid = value;
					this.SendPropertyChanged("objectid");
					this.OnobjectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResQual", DbType="NVarChar(50)")]
		public string idResQual
		{
			get
			{
				return this._idResQual;
			}
			set
			{
				if ((this._idResQual != value))
				{
					this.OnidResQualChanging(value);
					this.SendPropertyChanging();
					this._idResQual = value;
					this.SendPropertyChanged("idResQual");
					this.OnidResQualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRes", DbType="NVarChar(50)")]
		public string idRes
		{
			get
			{
				return this._idRes;
			}
			set
			{
				if ((this._idRes != value))
				{
					this.OnidResChanging(value);
					this.SendPropertyChanging();
					this._idRes = value;
					this.SendPropertyChanged("idRes");
					this.OnidResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOORes", DbType="NVarChar(50)")]
		public string IDOORes
		{
			get
			{
				return this._IDOORes;
			}
			set
			{
				if ((this._IDOORes != value))
				{
					this.OnIDOOResChanging(value);
					this.SendPropertyChanging();
					this._IDOORes = value;
					this.SendPropertyChanged("IDOORes");
					this.OnIDOOResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOPRes", DbType="NVarChar(50)")]
		public string IDOPRes
		{
			get
			{
				return this._IDOPRes;
			}
			set
			{
				if ((this._IDOPRes != value))
				{
					this.OnIDOPResChanging(value);
					this.SendPropertyChanging();
					this._IDOPRes = value;
					this.SendPropertyChanged("IDOPRes");
					this.OnIDOPResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeQual", DbType="NVarChar(10)")]
		public string TypeQual
		{
			get
			{
				return this._TypeQual;
			}
			set
			{
				if ((this._TypeQual != value))
				{
					this.OnTypeQualChanging(value);
					this.SendPropertyChanging();
					this._TypeQual = value;
					this.SendPropertyChanged("TypeQual");
					this.OnTypeQualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvalQual", DbType="Float")]
		public System.Nullable<double> EvalQual
		{
			get
			{
				return this._EvalQual;
			}
			set
			{
				if ((this._EvalQual != value))
				{
					this.OnEvalQualChanging(value);
					this.SendPropertyChanging();
					this._EvalQual = value;
					this.SendPropertyChanged("EvalQual");
					this.OnEvalQualChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MilSp_Visible_ResultIOP")]
	public partial class MilSp_Visible_ResultIOP1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _objectid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnobjectidChanging(int value);
    partial void OnobjectidChanged();
    #endregion
		
		public MilSp_Visible_ResultIOP1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this.OnobjectidChanging(value);
					this.SendPropertyChanging();
					this._objectid = value;
					this.SendPropertyChanged("objectid");
					this.OnobjectidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MILSP_VISIBILITY_SESSION")]
	internal partial class MilSp_VisibilitySession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRow;
		
		private string _Id;
		
		private string _Name;
		
		private string _UserName;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _Started;
		
		private System.Nullable<System.DateTime> _Finished;
		
		private int _CalculatedResults;
		
		private string _ReferencedGDB;
		
		private string _Surface;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRowChanging(int value);
    partial void OnIdRowChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedChanged();
    partial void OnFinishedChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedChanged();
    partial void OnCalculatedResultsChanging(int value);
    partial void OnCalculatedResultsChanged();
    partial void OnReferencedGDBChanging(string value);
    partial void OnReferencedGDBChanged();
    partial void OnSurfaceChanging(string value);
    partial void OnSurfaceChanged();
    #endregion
		
		public MilSp_VisibilitySession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRow", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdRow
		{
			get
			{
				return this._IdRow;
			}
			set
			{
				if ((this._IdRow != value))
				{
					this.OnIdRowChanging(value);
					this.SendPropertyChanging();
					this._IdRow = value;
					this.SendPropertyChanged("IdRow");
					this.OnIdRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="DateTime")]
		public System.Nullable<System.DateTime> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finished", DbType="DateTime")]
		public System.Nullable<System.DateTime> Finished
		{
			get
			{
				return this._Finished;
			}
			set
			{
				if ((this._Finished != value))
				{
					this.OnFinishedChanging(value);
					this.SendPropertyChanging();
					this._Finished = value;
					this.SendPropertyChanged("Finished");
					this.OnFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedResults", DbType="Int NOT NULL")]
		public int CalculatedResults
		{
			get
			{
				return this._CalculatedResults;
			}
			set
			{
				if ((this._CalculatedResults != value))
				{
					this.OnCalculatedResultsChanging(value);
					this.SendPropertyChanging();
					this._CalculatedResults = value;
					this.SendPropertyChanged("CalculatedResults");
					this.OnCalculatedResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferencedGDB", DbType="NVarChar(MAX)")]
		public string ReferencedGDB
		{
			get
			{
				return this._ReferencedGDB;
			}
			set
			{
				if ((this._ReferencedGDB != value))
				{
					this.OnReferencedGDBChanging(value);
					this.SendPropertyChanging();
					this._ReferencedGDB = value;
					this.SendPropertyChanged("ReferencedGDB");
					this.OnReferencedGDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="surface", Storage="_Surface", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Surface
		{
			get
			{
				return this._Surface;
			}
			set
			{
				if ((this._Surface != value))
				{
					this.OnSurfaceChanging(value);
					this.SendPropertyChanging();
					this._Surface = value;
					this.SendPropertyChanged("Surface");
					this.OnSurfaceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MILSP_VISIBLE_OBSERVPOINTS")]
	internal partial class VisiblilityObservPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OBJECTID;
		
		private string _soper;
		
		private string _idOP;
		
		private string _TitleOP;
		
		private string _TypeOP;
		
		private string _sGroup;
		
		private string _saffiliation;
		
		private System.Nullable<int> _ishare;
		
		private System.Nullable<double> _XWGS;
		
		private System.Nullable<double> _YWGS;
		
		private System.Nullable<double> _HRel;
		
		private System.Nullable<double> _AzimuthB;
		
		private System.Nullable<double> _AzimuthE;
		
		private System.Nullable<double> _AnglMinH;
		
		private System.Nullable<double> _AnglMaxH;
		
		private System.Nullable<double> _AzimuthMainAxis;
		
		private System.Nullable<double> _AngFrameH;
		
		private System.Nullable<double> _AnglFrameV;
		
		private System.Nullable<double> _AnglCameraRotationH;
		
		private System.Nullable<double> _AnglCameraRotationV;
		
		private double _AvailableHeightUpper;
		
		private double _AvailableHeightLover;
		
		private System.Nullable<System.DateTime> _dto;
		
		private double _InnerRadius;
		
		private double _OuterRadius;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOBJECTIDChanging(int value);
    partial void OnOBJECTIDChanged();
    partial void OnsoperChanging(string value);
    partial void OnsoperChanged();
    partial void OnidOPChanging(string value);
    partial void OnidOPChanged();
    partial void OnTitleOPChanging(string value);
    partial void OnTitleOPChanged();
    partial void OnTypeOPChanging(string value);
    partial void OnTypeOPChanged();
    partial void OnsGroupChanging(string value);
    partial void OnsGroupChanged();
    partial void OnsaffiliationChanging(string value);
    partial void OnsaffiliationChanged();
    partial void OnishareChanging(System.Nullable<int> value);
    partial void OnishareChanged();
    partial void OnXWGSChanging(System.Nullable<double> value);
    partial void OnXWGSChanged();
    partial void OnYWGSChanging(System.Nullable<double> value);
    partial void OnYWGSChanged();
    partial void OnHRelChanging(System.Nullable<double> value);
    partial void OnHRelChanged();
    partial void OnAzimuthBChanging(System.Nullable<double> value);
    partial void OnAzimuthBChanged();
    partial void OnAzimuthEChanging(System.Nullable<double> value);
    partial void OnAzimuthEChanged();
    partial void OnAnglMinHChanging(System.Nullable<double> value);
    partial void OnAnglMinHChanged();
    partial void OnAnglMaxHChanging(System.Nullable<double> value);
    partial void OnAnglMaxHChanged();
    partial void OnAzimuthMainAxisChanging(System.Nullable<double> value);
    partial void OnAzimuthMainAxisChanged();
    partial void OnAngFrameHChanging(System.Nullable<double> value);
    partial void OnAngFrameHChanged();
    partial void OnAnglFrameVChanging(System.Nullable<double> value);
    partial void OnAnglFrameVChanged();
    partial void OnAnglCameraRotationHChanging(System.Nullable<double> value);
    partial void OnAnglCameraRotationHChanged();
    partial void OnAnglCameraRotationVChanging(System.Nullable<double> value);
    partial void OnAnglCameraRotationVChanged();
    partial void OnAvailableHeightUpperChanging(double value);
    partial void OnAvailableHeightUpperChanged();
    partial void OnAvailableHeightLoverChanging(double value);
    partial void OnAvailableHeightLoverChanged();
    partial void OndtoChanging(System.Nullable<System.DateTime> value);
    partial void OndtoChanged();
    partial void OnInnerRadiusChanging(double value);
    partial void OnInnerRadiusChanged();
    partial void OnOuterRadiusChanging(double value);
    partial void OnOuterRadiusChanged();
    #endregion
		
		public VisiblilityObservPoint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBJECTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OBJECTID
		{
			get
			{
				return this._OBJECTID;
			}
			set
			{
				if ((this._OBJECTID != value))
				{
					this.OnOBJECTIDChanging(value);
					this.SendPropertyChanging();
					this._OBJECTID = value;
					this.SendPropertyChanged("OBJECTID");
					this.OnOBJECTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soper", DbType="NVarChar(50)")]
		public string soper
		{
			get
			{
				return this._soper;
			}
			set
			{
				if ((this._soper != value))
				{
					this.OnsoperChanging(value);
					this.SendPropertyChanging();
					this._soper = value;
					this.SendPropertyChanged("soper");
					this.OnsoperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOP", DbType="NVarChar(50)")]
		public string idOP
		{
			get
			{
				return this._idOP;
			}
			set
			{
				if ((this._idOP != value))
				{
					this.OnidOPChanging(value);
					this.SendPropertyChanging();
					this._idOP = value;
					this.SendPropertyChanged("idOP");
					this.OnidOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleOP", DbType="NVarChar(50)")]
		public string TitleOP
		{
			get
			{
				return this._TitleOP;
			}
			set
			{
				if ((this._TitleOP != value))
				{
					this.OnTitleOPChanging(value);
					this.SendPropertyChanging();
					this._TitleOP = value;
					this.SendPropertyChanged("TitleOP");
					this.OnTitleOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOP", DbType="NVarChar(10)")]
		public string TypeOP
		{
			get
			{
				return this._TypeOP;
			}
			set
			{
				if ((this._TypeOP != value))
				{
					this.OnTypeOPChanging(value);
					this.SendPropertyChanging();
					this._TypeOP = value;
					this.SendPropertyChanged("TypeOP");
					this.OnTypeOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGroup", DbType="NVarChar(50)")]
		public string sGroup
		{
			get
			{
				return this._sGroup;
			}
			set
			{
				if ((this._sGroup != value))
				{
					this.OnsGroupChanging(value);
					this.SendPropertyChanging();
					this._sGroup = value;
					this.SendPropertyChanged("sGroup");
					this.OnsGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saffiliation", DbType="NVarChar(10)")]
		public string saffiliation
		{
			get
			{
				return this._saffiliation;
			}
			set
			{
				if ((this._saffiliation != value))
				{
					this.OnsaffiliationChanging(value);
					this.SendPropertyChanging();
					this._saffiliation = value;
					this.SendPropertyChanged("saffiliation");
					this.OnsaffiliationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ishare", DbType="Int")]
		public System.Nullable<int> ishare
		{
			get
			{
				return this._ishare;
			}
			set
			{
				if ((this._ishare != value))
				{
					this.OnishareChanging(value);
					this.SendPropertyChanging();
					this._ishare = value;
					this.SendPropertyChanged("ishare");
					this.OnishareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XWGS", DbType="Float")]
		public System.Nullable<double> XWGS
		{
			get
			{
				return this._XWGS;
			}
			set
			{
				if ((this._XWGS != value))
				{
					this.OnXWGSChanging(value);
					this.SendPropertyChanging();
					this._XWGS = value;
					this.SendPropertyChanged("XWGS");
					this.OnXWGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YWGS", DbType="Float")]
		public System.Nullable<double> YWGS
		{
			get
			{
				return this._YWGS;
			}
			set
			{
				if ((this._YWGS != value))
				{
					this.OnYWGSChanging(value);
					this.SendPropertyChanging();
					this._YWGS = value;
					this.SendPropertyChanged("YWGS");
					this.OnYWGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HRel", DbType="Float")]
		public System.Nullable<double> HRel
		{
			get
			{
				return this._HRel;
			}
			set
			{
				if ((this._HRel != value))
				{
					this.OnHRelChanging(value);
					this.SendPropertyChanging();
					this._HRel = value;
					this.SendPropertyChanged("HRel");
					this.OnHRelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AzimuthB", DbType="Float")]
		public System.Nullable<double> AzimuthB
		{
			get
			{
				return this._AzimuthB;
			}
			set
			{
				if ((this._AzimuthB != value))
				{
					this.OnAzimuthBChanging(value);
					this.SendPropertyChanging();
					this._AzimuthB = value;
					this.SendPropertyChanged("AzimuthB");
					this.OnAzimuthBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AzimuthE", DbType="Float")]
		public System.Nullable<double> AzimuthE
		{
			get
			{
				return this._AzimuthE;
			}
			set
			{
				if ((this._AzimuthE != value))
				{
					this.OnAzimuthEChanging(value);
					this.SendPropertyChanging();
					this._AzimuthE = value;
					this.SendPropertyChanged("AzimuthE");
					this.OnAzimuthEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnglMinH", DbType="Float")]
		public System.Nullable<double> AnglMinH
		{
			get
			{
				return this._AnglMinH;
			}
			set
			{
				if ((this._AnglMinH != value))
				{
					this.OnAnglMinHChanging(value);
					this.SendPropertyChanging();
					this._AnglMinH = value;
					this.SendPropertyChanged("AnglMinH");
					this.OnAnglMinHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnglMaxH", DbType="Float")]
		public System.Nullable<double> AnglMaxH
		{
			get
			{
				return this._AnglMaxH;
			}
			set
			{
				if ((this._AnglMaxH != value))
				{
					this.OnAnglMaxHChanging(value);
					this.SendPropertyChanging();
					this._AnglMaxH = value;
					this.SendPropertyChanged("AnglMaxH");
					this.OnAnglMaxHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AzimuthMainAxis", DbType="Float")]
		public System.Nullable<double> AzimuthMainAxis
		{
			get
			{
				return this._AzimuthMainAxis;
			}
			set
			{
				if ((this._AzimuthMainAxis != value))
				{
					this.OnAzimuthMainAxisChanging(value);
					this.SendPropertyChanging();
					this._AzimuthMainAxis = value;
					this.SendPropertyChanged("AzimuthMainAxis");
					this.OnAzimuthMainAxisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AngFrameH", DbType="Float")]
		public System.Nullable<double> AngFrameH
		{
			get
			{
				return this._AngFrameH;
			}
			set
			{
				if ((this._AngFrameH != value))
				{
					this.OnAngFrameHChanging(value);
					this.SendPropertyChanging();
					this._AngFrameH = value;
					this.SendPropertyChanged("AngFrameH");
					this.OnAngFrameHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnglFrameV", DbType="Float")]
		public System.Nullable<double> AnglFrameV
		{
			get
			{
				return this._AnglFrameV;
			}
			set
			{
				if ((this._AnglFrameV != value))
				{
					this.OnAnglFrameVChanging(value);
					this.SendPropertyChanging();
					this._AnglFrameV = value;
					this.SendPropertyChanged("AnglFrameV");
					this.OnAnglFrameVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnglCameraRotationH", DbType="Float")]
		public System.Nullable<double> AnglCameraRotationH
		{
			get
			{
				return this._AnglCameraRotationH;
			}
			set
			{
				if ((this._AnglCameraRotationH != value))
				{
					this.OnAnglCameraRotationHChanging(value);
					this.SendPropertyChanging();
					this._AnglCameraRotationH = value;
					this.SendPropertyChanged("AnglCameraRotationH");
					this.OnAnglCameraRotationHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnglCameraRotationV", DbType="Float")]
		public System.Nullable<double> AnglCameraRotationV
		{
			get
			{
				return this._AnglCameraRotationV;
			}
			set
			{
				if ((this._AnglCameraRotationV != value))
				{
					this.OnAnglCameraRotationVChanging(value);
					this.SendPropertyChanging();
					this._AnglCameraRotationV = value;
					this.SendPropertyChanged("AnglCameraRotationV");
					this.OnAnglCameraRotationVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableHeightUpper", DbType="Float NOT NULL")]
		public double AvailableHeightUpper
		{
			get
			{
				return this._AvailableHeightUpper;
			}
			set
			{
				if ((this._AvailableHeightUpper != value))
				{
					this.OnAvailableHeightUpperChanging(value);
					this.SendPropertyChanging();
					this._AvailableHeightUpper = value;
					this.SendPropertyChanged("AvailableHeightUpper");
					this.OnAvailableHeightUpperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableHeightLover", DbType="Float NOT NULL")]
		public double AvailableHeightLover
		{
			get
			{
				return this._AvailableHeightLover;
			}
			set
			{
				if ((this._AvailableHeightLover != value))
				{
					this.OnAvailableHeightLoverChanging(value);
					this.SendPropertyChanging();
					this._AvailableHeightLover = value;
					this.SendPropertyChanged("AvailableHeightLover");
					this.OnAvailableHeightLoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dto", DbType="DateTime2")]
		public System.Nullable<System.DateTime> dto
		{
			get
			{
				return this._dto;
			}
			set
			{
				if ((this._dto != value))
				{
					this.OndtoChanging(value);
					this.SendPropertyChanging();
					this._dto = value;
					this.SendPropertyChanged("dto");
					this.OndtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerRadius", DbType="Float NOT NULL")]
		public double InnerRadius
		{
			get
			{
				return this._InnerRadius;
			}
			set
			{
				if ((this._InnerRadius != value))
				{
					this.OnInnerRadiusChanging(value);
					this.SendPropertyChanging();
					this._InnerRadius = value;
					this.SendPropertyChanged("InnerRadius");
					this.OnInnerRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OuterRadius", DbType="Float NOT NULL")]
		public double OuterRadius
		{
			get
			{
				return this._OuterRadius;
			}
			set
			{
				if ((this._OuterRadius != value))
				{
					this.OnOuterRadiusChanging(value);
					this.SendPropertyChanging();
					this._OuterRadius = value;
					this.SendPropertyChanged("OuterRadius");
					this.OnOuterRadiusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MILSP_VISIBLE_OBJECTSOBSERVATION_R")]
	internal partial class VisiblilityObservationObjects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OBJECTID;
		
		private System.Nullable<System.DateTime> _DTO;
		
		private string _idOO;
		
		private string _sGroupOO;
		
		private string _sTitleOO;
		
		private System.Nullable<int> _ifShare;
		
		private string _soper;
		
		private string _saffiliation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOBJECTIDChanging(int value);
    partial void OnOBJECTIDChanged();
    partial void OnDTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDTOChanged();
    partial void OnidOOChanging(string value);
    partial void OnidOOChanged();
    partial void OnsGroupOOChanging(string value);
    partial void OnsGroupOOChanged();
    partial void OnsTitleOOChanging(string value);
    partial void OnsTitleOOChanged();
    partial void OnifShareChanging(System.Nullable<int> value);
    partial void OnifShareChanged();
    partial void OnsoperChanging(string value);
    partial void OnsoperChanged();
    partial void OnsaffiliationChanging(string value);
    partial void OnsaffiliationChanged();
    #endregion
		
		public VisiblilityObservationObjects()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBJECTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OBJECTID
		{
			get
			{
				return this._OBJECTID;
			}
			set
			{
				if ((this._OBJECTID != value))
				{
					this.OnOBJECTIDChanging(value);
					this.SendPropertyChanging();
					this._OBJECTID = value;
					this.SendPropertyChanged("OBJECTID");
					this.OnOBJECTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTO", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DTO
		{
			get
			{
				return this._DTO;
			}
			set
			{
				if ((this._DTO != value))
				{
					this.OnDTOChanging(value);
					this.SendPropertyChanging();
					this._DTO = value;
					this.SendPropertyChanged("DTO");
					this.OnDTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOO", DbType="NVarChar(50)")]
		public string idOO
		{
			get
			{
				return this._idOO;
			}
			set
			{
				if ((this._idOO != value))
				{
					this.OnidOOChanging(value);
					this.SendPropertyChanging();
					this._idOO = value;
					this.SendPropertyChanged("idOO");
					this.OnidOOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGroupOO", DbType="NVarChar(50)")]
		public string sGroupOO
		{
			get
			{
				return this._sGroupOO;
			}
			set
			{
				if ((this._sGroupOO != value))
				{
					this.OnsGroupOOChanging(value);
					this.SendPropertyChanging();
					this._sGroupOO = value;
					this.SendPropertyChanged("sGroupOO");
					this.OnsGroupOOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitleOO", DbType="NVarChar(50)")]
		public string sTitleOO
		{
			get
			{
				return this._sTitleOO;
			}
			set
			{
				if ((this._sTitleOO != value))
				{
					this.OnsTitleOOChanging(value);
					this.SendPropertyChanging();
					this._sTitleOO = value;
					this.SendPropertyChanged("sTitleOO");
					this.OnsTitleOOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifShare", DbType="Int")]
		public System.Nullable<int> ifShare
		{
			get
			{
				return this._ifShare;
			}
			set
			{
				if ((this._ifShare != value))
				{
					this.OnifShareChanging(value);
					this.SendPropertyChanging();
					this._ifShare = value;
					this.SendPropertyChanged("ifShare");
					this.OnifShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soper", DbType="NVarChar(50)")]
		public string soper
		{
			get
			{
				return this._soper;
			}
			set
			{
				if ((this._soper != value))
				{
					this.OnsoperChanging(value);
					this.SendPropertyChanging();
					this._soper = value;
					this.SendPropertyChanged("soper");
					this.OnsoperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saffiliation", DbType="NVarChar(10)")]
		public string saffiliation
		{
			get
			{
				return this._saffiliation;
			}
			set
			{
				if ((this._saffiliation != value))
				{
					this.OnsaffiliationChanging(value);
					this.SendPropertyChanging();
					this._saffiliation = value;
					this.SendPropertyChanged("saffiliation");
					this.OnsaffiliationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MILSP_VISIBLE_RESULTS")]
	public partial class MilSp_VisiblityResults : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRow;
		
		private string _Id;
		
		private string _Name;
		
		private string _UserName;
		
		private System.DateTime _Created;
		
		private int _CalculatedResults;
		
		private string _ReferencedGDB;
		
		private bool _shared;
		
		private string _surface;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRowChanging(int value);
    partial void OnIdRowChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnCalculatedResultsChanging(int value);
    partial void OnCalculatedResultsChanged();
    partial void OnReferencedGDBChanging(string value);
    partial void OnReferencedGDBChanged();
    partial void OnsharedChanging(bool value);
    partial void OnsharedChanged();
    partial void OnsurfaceChanging(string value);
    partial void OnsurfaceChanged();
    #endregion
		
		public MilSp_VisiblityResults()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRow", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdRow
		{
			get
			{
				return this._IdRow;
			}
			set
			{
				if ((this._IdRow != value))
				{
					this.OnIdRowChanging(value);
					this.SendPropertyChanging();
					this._IdRow = value;
					this.SendPropertyChanged("IdRow");
					this.OnIdRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedResults", DbType="Int NOT NULL")]
		public int CalculatedResults
		{
			get
			{
				return this._CalculatedResults;
			}
			set
			{
				if ((this._CalculatedResults != value))
				{
					this.OnCalculatedResultsChanging(value);
					this.SendPropertyChanging();
					this._CalculatedResults = value;
					this.SendPropertyChanged("CalculatedResults");
					this.OnCalculatedResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferencedGDB", DbType="NVarChar(MAX)")]
		public string ReferencedGDB
		{
			get
			{
				return this._ReferencedGDB;
			}
			set
			{
				if ((this._ReferencedGDB != value))
				{
					this.OnReferencedGDBChanging(value);
					this.SendPropertyChanging();
					this._ReferencedGDB = value;
					this.SendPropertyChanged("ReferencedGDB");
					this.OnReferencedGDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shared", DbType="Bit NOT NULL")]
		public bool shared
		{
			get
			{
				return this._shared;
			}
			set
			{
				if ((this._shared != value))
				{
					this.OnsharedChanging(value);
					this.SendPropertyChanging();
					this._shared = value;
					this.SendPropertyChanged("shared");
					this.OnsharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surface", DbType="NVarChar(255)")]
		public string surface
		{
			get
			{
				return this._surface;
			}
			set
			{
				if ((this._surface != value))
				{
					this.OnsurfaceChanging(value);
					this.SendPropertyChanging();
					this._surface = value;
					this.SendPropertyChanged("surface");
					this.OnsurfaceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
